---
interface Props {
  title: string;
  date: string;
  location: string;
  time: string;
  timeEnd: string;
  place: string;
  program?: any;
}
const { title, date, location, time, timeEnd, place, program } = Astro.props

const dateOptions: object = {
    weekday: 'long',
    year: "numeric",
    month: "long",
    day: "numeric",
    hour: "numeric",
    minute: 'numeric'
};

const formattedDate = new Date(`${date.split('-').join('/')} ${time}`).toLocaleDateString("en-US", dateOptions);
console.log(program);
---


<div class="flex flex-col gap-4 md:flex-row md:justify-between border-[1px] border-[var(--action-color)] p-4">    
    <div>
        <p class="text-2xl text-[var(--action-color-state)]">{formattedDate}</p>
        <h2 class="text-3xl text-[var(--font-color)] font-extrabold mb-4">{title}</h2>
        <p>{place}</p>
        <p>{location}</p>
    </div>
    {program && (
        <div>
            <h3 class="text-lg mb-1 font-extralight">Program:</h3>
            <ul>
            {program?.map((data) => <li>{data.title} - <span class="text-sm">{data.composer}</span></li>)}
            </ul>
        </div>
    )}
    <add-to-calendar-button
    name={title}
    options="'Apple','Google'"
    location={`${place} ${location}`}
    startDate={date}
    endDate={date}
    startTime={time}
    endTime={timeEnd}
    timeZone="America/New_York"
    ></add-to-calendar-button>
        
</div>